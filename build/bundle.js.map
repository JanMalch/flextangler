{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/FileInputs.svelte","../../src/factories.ts","../../src/formulas/content.ts","../../src/formulas/math.ts","../../src/shapes.ts","../../src/drawing/utils.ts","../../src/components/TriangleProcessing.svelte","../../src/components/Canvas.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n\n  export let images: { src: string; alt: string }[] = [];\n\n  const dispatch = createEventDispatcher();\n\n  let inputs: HTMLInputElement[] = Array(4).fill(null);\n\n  function onInputChange(_: Event, index: number) {\n    const originalFiles = inputs[index].files;\n    const bound = Math.min(4, index + originalFiles.length);\n    for (let i = index; i < bound; i++) {\n      const list = new DataTransfer();\n      list.items.add(originalFiles.item(i - index));\n      inputs[i].files = list.files;\n    }\n\n    const files = inputs.map((input) => input.files.item(0));\n    dispatch('filesChange', files);\n  }\n</script>\n\n<form>\n  {#each inputs as _, i}\n    <div class=\"box-shadow\" style=\"grid-area: {String.fromCharCode(i + 97)}\">\n      {#if images[i] != null}\n        <img src=\"{images[i].src}\" alt=\"{images[i].alt}}\" />\n      {/if}\n      <label on:click=\"{() => inputs[i]?.click()}\" for=\"file-{i}\">\n        {images[i] == null ? `Select one ${i !== 3 ? 'or more' : ''} image${i === 3 ? '' : 's'}.` : 'Swap image.'}\n      </label>\n      <input\n        bind:this=\"{inputs[i]}\"\n        id=\"file-{i}\"\n        type=\"file\"\n        accept=\"image/*\"\n        multiple=\"{i !== 3}\"\n        on:change=\"{(ev) => onInputChange(ev, i)}\" />\n    </div>\n  {/each}\n</form>\n\n<style>\n  form {\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n  div {\n    border-radius: 4px;\n    background-color: #ffffff;\n    position: relative;\n    overflow: hidden;\n    height: 8em;\n    width: 8em;\n  }\n\n  label {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(255, 255, 255, 0.8);\n    transition: opacity 0.3s, background-color 0.3s;\n    padding: 16px;\n    font-size: 1.25em;\n    text-align: center;\n    display: grid;\n    place-items: center;\n    cursor: pointer;\n  }\n\n  label:hover {\n    background-color: rgba(240, 240, 240, 0.8);\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  img + label {\n    opacity: 0;\n  }\n\n  img + label:hover {\n    background-color: rgba(255, 255, 255, 0.8);\n  }\n\n  div:hover > img + label {\n    opacity: 1;\n  }\n\n  input {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n    top: -9999px;\n    left: -9999px;\n  }\n</style>\n","/**\n * Creates a point with the given coordinates.\n * @param x the x coordinate\n * @param y the y coordinate\n */\nexport function p(x, y) {\n    return Object.freeze({ x, y });\n}\n/**\n * The point `(0, 0)`.\n */\nexport const ORIGIN = p(0, 0);\n","import { p } from '../factories';\n/**\n * Der Innenwinkel an der Hypothenuse eines gleichschenkligen Dreiecks,\n * dessen Höhe und Breite gleich ist.\n */\nexport const magicAngle = 63.435;\nexport const magicWidth = Math.sqrt(3) / 4;\nexport const magicScale = 2 / Math.sqrt(3);\nexport const contentTriangles = [\n    // south west\n    [p(0, 0.5), p(0.5, 0.5), p(0.25, magicWidth + 0.5)],\n    // north west\n    [p(0, 0.5), p(0.5, 0.5), p(0.25, 0.5 - magicWidth)],\n    // north\n    [p(0.25, 0.5 - magicWidth), p(0.75, 0.5 - magicWidth), p(0.5, 0.5)],\n    // north east\n    [p(0.75, 0.5 - magicWidth), p(1, 0.5), p(0.5, 0.5)],\n    // south east\n    [p(0.5, 0.5), p(1, 0.5), p(0.75, 0.5 + magicWidth)],\n    // south\n    [p(0.5, 0.5), p(0.25, 0.5 + magicWidth), p(0.75, 0.5 + magicWidth)],\n];\n/**\n * - `[0]` &rarr; south west\n * - `[1]` &rarr; north west\n * - `[2]` &rarr; north\n * - `[3]` &rarr; north east\n * - `[4]` &rarr; south east\n * - `[5]` &rarr; south\n */\nexport const contentRectangleWrapper = [\n    // south west\n    {\n        x: 0,\n        y: 0.5,\n        width: 0.5,\n        height: magicWidth,\n    },\n    // north west\n    {\n        x: 0,\n        y: 0.5 - magicWidth,\n        width: 0.5,\n        height: magicWidth,\n    },\n    // north\n    {\n        x: 0.25,\n        y: 0.5 - magicWidth,\n        width: 0.5,\n        height: magicWidth,\n    },\n    // north east\n    {\n        x: 0.5,\n        y: 0.5 - magicWidth,\n        width: 0.5,\n        height: magicWidth,\n    },\n    // south east\n    {\n        x: 0.5,\n        y: 0.5,\n        width: 0.5,\n        height: magicWidth,\n    },\n    // south\n    {\n        x: 0.25,\n        y: 0.5,\n        width: 0.5,\n        height: magicWidth,\n    },\n];\n/**\n * - `[0]` &rarr; south west\n * - `[1]` &rarr; north west\n * - `[2]` &rarr; north\n * - `[3]` &rarr; north east\n * - `[4]` &rarr; south east\n * - `[5]` &rarr; south\n * @param centerCrop\n */\nexport function resolveContentTriangles(centerCrop) {\n    return contentTriangles.map((triangle) => {\n        return triangle.map((point) => p(point.x * centerCrop.width, point.y * centerCrop.height));\n    });\n}\n","/**\n * Calculates the hypotenuse `c` with `a² + b² = c²`.\n * @param a the length a\n * @param b the length b\n */\nexport function pythagorean(a, b) {\n    return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n}\n/**\n * Calculates the length of the two legs of an isosceles triangle.\n * @param dimensions the dimensions of the triangle\n */\nexport function legOfIsoscelesTriangle(dimensions) {\n    return pythagorean(dimensions.base / 2, dimensions.height);\n}\n/**\n * Converts degree to radian, e.g. `180` is `Math.PI`.\n * @param degree the angle in degrees\n */\nexport function degreeToRadian(degree) {\n    return (Math.PI * degree) / 180;\n}\n/**\n * Converts radian to degree, e.g. `Math.PI` is `180`.\n * @param radian the angle in radian\n */\nexport function radianToDegree(radian) {\n    return (radian * 180) / Math.PI;\n}\n/**\n * Calculates the arcuscotanges of the given angle in radian.\n * @param angleInRadian the angle in radian\n */\nexport function acot(angleInRadian) {\n    return Math.atan(angleInRadian) + 2 * Math.atan(1);\n}\nexport function ctg(x) {\n    return 1 / Math.tan(x);\n}\nexport function arcctg(x) {\n    return Math.PI / 2 - Math.atan(x);\n}\n","export const leftwardTriangle = [\n    { x: 0, y: 0.5 },\n    { x: 1, y: 1 },\n    { x: 1, y: 0 },\n];\nexport const rightwardTriangle = [\n    { x: 0, y: 0 },\n    { x: 1, y: 0.5 },\n    { x: 0, y: 1 },\n];\n","import { p } from '../factories';\nimport { degreeToRadian } from '../formulas/math';\n/**\n * Moves the canvas to a point within the given rectangle.\n * This point is defined as relative dimensions via the `offset` argument.\n *\n * The canvas is then rotated around this point.\n *\n * Does not save or restore the canvas state.\n * @param ctx the canvas' CanvasRenderingContext2D\n * @param rectangle the rectangle to rotate in\n * @param offset the relative offset to find the rotation point in the rectangle\n * @param rotationInDegrees the angle to rotate by in degrees\n * @example\n * rotateAround(\n *   ctx,\n *   { x: 50, y: 50, width: 100, height: 500 },\n *   rotateAround.CENTER_CENTER,\n *   90\n * )\n */\nexport function rotateAround(ctx, rectangle, offset, rotationInDegrees) {\n    ctx.moveTo(0, 0);\n    ctx.translate(rectangle.x + rectangle.width * offset.x, rectangle.y + rectangle.height * offset.y);\n    ctx.rotate(degreeToRadian(rotationInDegrees));\n}\nrotateAround.LEFT_TOP = p(0, 0);\nrotateAround.CENTER_TOP = p(0.5, 0);\nrotateAround.RIGHT_TOP = p(1, 0);\nrotateAround.LEFT_CENTER = p(0, 0.5);\nrotateAround.CENTER_CENTER = p(0.5, 0.5);\nrotateAround.RIGHT_CENTER = p(1, 0.5);\nrotateAround.LEFT_BOTTOM = p(0, 1);\nrotateAround.CENTER_BOTTOM = p(0.5, 1);\nrotateAround.RIGHT_BOTTOM = p(1, 1);\n/**\n * Adds the values of `movement` to the given `pointlike` object.\n * The given `pointlike` object will not be mutated, but instead a new object\n * is created by using spread syntax. Thus all other properties remain unchanged.\n * @param pointlike a pointlike object. Must be spreadable\n * @param movement the point to add\n */\nexport function movePointlike(pointlike, movement) {\n    return Object.assign(Object.assign({}, pointlike), { x: pointlike.x + movement.x, y: pointlike.y + movement.y });\n}\n/**\n * Draws the given image based on the given rectangles.\n * The `refPoint` will be added onto the destination (`scale`) `x` and `y`\n * coordinates in the canvas.\n *\n * Does not save or restore the canvas state.\n * @param ctx the canvas' CanvasRenderingContext2D\n * @param refPoint a reference point\n * @param image the image to draw\n * @param destination the destination specification\n * @param source the source specification\n * @see https://stackoverflow.com/a/26015533\n */\nexport function drawImage(ctx, refPoint, image, destination, source) {\n    if (source != null) {\n        ctx.drawImage(image, source.x, source.y, source.width, source.height, destination.x + refPoint.x, destination.y + refPoint.y, destination.width, destination.height);\n    }\n    else {\n        ctx.drawImage(image, destination.x + refPoint.x, destination.y + refPoint.y, destination.width, destination.height);\n    }\n}\n/**\n * Creates line in the context along the given `points`.\n * Each point will be added to the `refPoint`.\n *\n * Does not start or end a path.\n *\n * Does not save or restore the canvas state.\n * @param ctx the canvas' CanvasRenderingContext2D\n * @param refPoint a reference point\n * @param points a list of points\n */\nexport function moveAlongPath(ctx, refPoint, points) {\n    const start = movePointlike(refPoint, points[0]);\n    ctx.moveTo(start.x, start.y);\n    for (let i = 1; i < points.length; i++) {\n        const next = movePointlike(refPoint, points[i]);\n        ctx.lineTo(next.x, next.y);\n    }\n}\n/**\n * Creates the given clipping shape and invokes the callback.\n *\n * Saves and restores the canvas state.\n * @param ctx the canvas' CanvasRenderingContext2D\n * @param showLines draw the border of the clip\n * @param refPoint a reference point\n * @param clippingShape a list of points\n * @param callback called after `clip` and before `restore`\n */\nexport function inClip(ctx, showLines, refPoint, clippingShape, callback) {\n    ctx.save();\n    ctx.beginPath();\n    moveAlongPath(ctx, refPoint, clippingShape);\n    ctx.closePath();\n    ctx.clip();\n    if (showLines) {\n        ctx.setLineDash([5, 5]);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = '#FF0000'; // '#666666';\n        ctx.stroke();\n    }\n    callback();\n    ctx.restore();\n}\n/**\n * Draws and clips the given image.\n * Both the clip and the image position in the canvas will be relative to the `refPoint`.\n *\n * Saves and restores the canvas state.\n * @param ctx the canvas' CanvasRenderingContext2D\n * @param showLines draw the border of the clip\n * @param refPoint a reference point\n * @param clippingShape a list of points\n * @param image the image to draw\n * @param destination the destination specification\n * @param source the source specification\n * @see inClip\n * @see drawImage\n */\nexport function clipImage(ctx, showLines, refPoint, clippingShape, image, destination, source) {\n    return inClip(ctx, showLines, refPoint, clippingShape, () => drawImage(ctx, refPoint, image, destination, source));\n}\n","<script lang=\"ts\">\n  import { afterUpdate, createEventDispatcher } from 'svelte';\n  import { drawImage, inClip } from '../drawing/utils';\n  import { ORIGIN } from '../factories';\n  import { magicWidth } from '../formulas/content';\n  import type {\n    InputValues,\n    Rectangle,\n    RectangleDef,\n    TriangleDef,\n  } from '../types';\n\n  export let image: HTMLImageElement;\n  export let inputValues: InputValues;\n  export let rotation: (\n    canvas: HTMLCanvasElement,\n    previous: HTMLCanvasElement\n  ) => void;\n  export let secondRotation: (\n    canvas: HTMLCanvasElement,\n    previous: HTMLCanvasElement\n  ) => void;\n  export let secondCanvasDimensions: (\n    defaultWidth: number,\n    defaultHeight: number\n  ) => RectangleDef = (w, h) => ({ width: w, height: h });\n  export let scalingFactor: number;\n  export let clippingTriangle: TriangleDef;\n  export let relativeRectangle: Rectangle;\n\n  /**\n   * @deprecated remove from application\n   */\n  let showLines = false;\n\n  let toTriangleCanvas: HTMLCanvasElement | null = null;\n  let rotatedTriangleCanvas: HTMLCanvasElement | null = null;\n  let fullRotatedTriangleCanvas: HTMLCanvasElement | null = null;\n  let scaledRotatedTriangleCanvas: HTMLCanvasElement | null = null;\n\n  const dispatch = createEventDispatcher();\n\n  afterUpdate(() => redraw());\n\n  function loadIntoTriangleCanvas() {\n    const ctx = toTriangleCanvas.getContext('2d');\n    ctx.clearRect(0, 0, toTriangleCanvas.width, toTriangleCanvas.height);\n    ctx.save();\n\n    inClip(\n      ctx,\n      showLines,\n      ORIGIN,\n      clippingTriangle.map((point) => ({\n        x: point.x * toTriangleCanvas.width,\n        y: point.y * toTriangleCanvas.height,\n      })),\n      () => {\n        drawImage(\n          ctx,\n          ORIGIN,\n          image,\n          {\n            x: 0,\n            y: 0,\n            width: toTriangleCanvas.width,\n            height: toTriangleCanvas.height,\n          },\n          {\n            x: relativeRectangle.x * image.naturalWidth,\n            y: relativeRectangle.y * image.naturalHeight,\n            width: relativeRectangle.width * image.naturalWidth,\n            height: relativeRectangle.height * image.naturalHeight,\n          }\n        );\n      }\n    );\n\n    ctx.restore();\n  }\n\n  function loadIntoRotatedCanvas() {\n    const ctx = rotatedTriangleCanvas.getContext('2d');\n    ctx.save();\n    if (rotation) {\n      rotation(rotatedTriangleCanvas, toTriangleCanvas);\n    } else {\n      ctx.drawImage(toTriangleCanvas, 0, 0);\n    }\n    ctx.restore();\n  }\n\n  function loadIntoFullRotatedCanvas() {\n    const ctx = fullRotatedTriangleCanvas.getContext('2d');\n    ctx.save();\n    if (secondRotation) {\n      secondRotation(fullRotatedTriangleCanvas, rotatedTriangleCanvas);\n    } else {\n      ctx.drawImage(rotatedTriangleCanvas, 0, 0);\n    }\n    ctx.restore();\n  }\n\n  function loadIntoScaledCanvas() {\n    const ctx = scaledRotatedTriangleCanvas.getContext('2d');\n    ctx.save();\n    drawImage(\n      ctx,\n      ORIGIN,\n      fullRotatedTriangleCanvas,\n      {\n        x: 0,\n        y: 0,\n        width: scaledRotatedTriangleCanvas.width,\n        height: scaledRotatedTriangleCanvas.height,\n      },\n\n      {\n        x: 0,\n        y: 0,\n        width: fullRotatedTriangleCanvas.width,\n        height: fullRotatedTriangleCanvas.height,\n      }\n    );\n    ctx.restore();\n  }\n\n  function redraw() {\n    loadIntoTriangleCanvas();\n    loadIntoRotatedCanvas();\n    loadIntoFullRotatedCanvas();\n    loadIntoScaledCanvas();\n    dispatch('finish', scaledRotatedTriangleCanvas);\n  }\n</script>\n\n<section>\n  <div>\n    <b>toTriangleCanvas ({toTriangleCanvas?.width.toFixed(2)}\n      &times;\n      {toTriangleCanvas?.height.toFixed(2)})</b>\n    <canvas\n      bind:this=\"{toTriangleCanvas}\"\n      height=\"{inputValues.triangleHeight}\"\n      width=\"{inputValues.triangleBase * (magicWidth * 2)}\"></canvas>\n  </div>\n  <div>\n    <b>rotatedTriangleCanvas ({rotatedTriangleCanvas?.width.toFixed(2)}\n      &times;\n      {rotatedTriangleCanvas?.height.toFixed(2)})</b>\n    <canvas\n      bind:this=\"{rotatedTriangleCanvas}\"\n      height=\"{secondCanvasDimensions(inputValues.triangleBase * (magicWidth * 2), inputValues.triangleHeight).height}\"\n      width=\"{secondCanvasDimensions(inputValues.triangleBase * (magicWidth * 2), inputValues.triangleHeight).width}\"></canvas>\n  </div>\n  <div>\n    <b>fullRotatedTriangleCanvas ({fullRotatedTriangleCanvas?.width.toFixed(2)}\n      &times;\n      {fullRotatedTriangleCanvas?.height.toFixed(2)})</b>\n    <canvas\n      bind:this=\"{fullRotatedTriangleCanvas}\"\n      height=\"{inputValues.triangleHeight}\"\n      width=\"{inputValues.triangleBase * (magicWidth * 2)}\"></canvas>\n  </div>\n  <div>\n    <b>scaledRotatedTriangleCanvas ({scaledRotatedTriangleCanvas?.width.toFixed(2)}\n      &times;\n      {scaledRotatedTriangleCanvas?.height.toFixed(2)})</b>\n    <canvas\n      bind:this=\"{scaledRotatedTriangleCanvas}\"\n      height=\"{inputValues.triangleHeight}\"\n      width=\"{inputValues.triangleBase * (magicWidth * 2) * scalingFactor}\"></canvas>\n  </div>\n</section>\n\n<style>\n  section {\n    display: grid;\n    grid-gap: 16px;\n    grid-template-columns: repeat(4, 1fr);\n    margin-bottom: 32px;\n  }\n\n  b {\n    display: block;\n  }\n\n  canvas {\n    border: 1px solid #444;\n    background-color: #eeeeee;\n  }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { magicScale, magicWidth } from '../formulas/content';\n  import { degreeToRadian } from '../formulas/math';\n  import { leftwardTriangle, rightwardTriangle } from '../shapes';\n  import TriangleProcessing from './TriangleProcessing.svelte';\n\n  export let drawables: HTMLImageElement[] = [];\n  export let triangleHeight: number;\n  export let canvas: HTMLCanvasElement | null = null;\n\n  const dispatch = createEventDispatcher();\n\n  $: ctx = canvas?.getContext('2d');\n\n  $: triangleBase = triangleHeight;\n  $: inputValues = { triangleBase, triangleHeight };\n  $: glueWidth = Math.ceil(triangleHeight * 0.4);\n\n  const lookup = [\n    {\n      relativeRectangle: {\n        x: 0.5 - magicWidth,\n        y: 0,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n    {\n      relativeRectangle: {\n        x: 0.5,\n        y: 0,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n    {\n      rotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.rotate(degreeToRadian(-90));\n        ctx.drawImage(prev, prev.width * -1, 0);\n      },\n      secondRotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.translate(0, canvas.height / 2);\n        ctx.rotate(degreeToRadian(-30));\n        ctx.drawImage(prev, 0, 0);\n      },\n      secondCanvasDimensions: (defaultWidth, defaultHeight) => ({\n        height: defaultWidth,\n        width: defaultHeight,\n      }),\n      relativeRectangle: {\n        x: 0.5,\n        y: 0.25,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n    {\n      rotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.rotate(degreeToRadian(-30));\n        ctx.drawImage(prev, 0, 0);\n      },\n      secondRotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d');\n        ctx.rotate(degreeToRadian(-90));\n        ctx.drawImage(prev, -1 * inputValues.triangleBase, 0);\n      },\n      secondCanvasDimensions: (defaultWidth, defaultHeight) => ({\n        height: defaultWidth,\n        width: defaultHeight,\n      }),\n      relativeRectangle: {\n        x: 0.5,\n        y: 0.5,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n    {\n      rotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.rotate(degreeToRadian(90));\n        ctx.drawImage(prev, 0, canvas.width * -1);\n      },\n      secondRotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d');\n        ctx.translate(canvas.width, canvas.height);\n        ctx.rotate(degreeToRadian(30));\n        ctx.drawImage(prev, -1 * canvas.height, -1 * canvas.width);\n      },\n      secondCanvasDimensions: (defaultWidth, defaultHeight) => ({\n        height: defaultWidth,\n        width: defaultHeight,\n      }),\n      relativeRectangle: {\n        x: 0.5 - magicWidth,\n        y: 0.5,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n    {\n      rotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.translate(canvas.width, 0);\n        ctx.rotate(degreeToRadian(90));\n        ctx.drawImage(prev, 0, 0);\n      },\n      secondRotation: (canvas, prev) => {\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        ctx.rotate(degreeToRadian(30));\n        ctx.drawImage(prev, 0, 0);\n      },\n      secondCanvasDimensions: (defaultWidth, defaultHeight) => {\n        return {\n          height: defaultWidth,\n          width: defaultHeight,\n        };\n      },\n      relativeRectangle: {\n        x: 0.5 - magicWidth,\n        y: 0.25,\n        width: magicWidth,\n        height: 0.5,\n      },\n    },\n  ];\n\n  $: allTriangleSetups = drawables.some((d) => !(d instanceof HTMLImageElement))\n    ? []\n    : drawables.map((drawable) =>\n        Array(6)\n          .fill(0)\n          .map((_, i) => {\n            return {\n              image: drawable,\n              clippingTriangle:\n                i % 2 === 1 ? rightwardTriangle : leftwardTriangle,\n              ...lookup[i],\n            };\n          })\n      );\n\n  function onProcessingFinish(\n    { detail: partialCanvas },\n    line: number,\n    index: number\n  ) {\n    if (line % 2 === 0) {\n      if (index === 0) {\n        ctx.drawImage(\n          partialCanvas,\n          5 * partialCanvas.width,\n          line * (triangleBase / 2)\n        );\n      } else {\n        ctx.drawImage(\n          partialCanvas,\n          (index - 1) * partialCanvas.width,\n          line * (triangleBase / 2)\n        );\n      }\n    } else {\n      ctx.drawImage(\n        partialCanvas,\n        index * partialCanvas.width,\n        line * (triangleBase / 2)\n      );\n    }\n    dispatch('finish', canvas) // TODO: count how often and only emit last\n  }\n</script>\n\n<svelte:options accessors/>\n\n<div aria-hidden=\"true\" hidden>\n  {#each allTriangleSetups as triangleSetups, line}\n    {#each triangleSetups as setup, i}\n      <strong>A{i}</strong>\n      <TriangleProcessing\n        {...setup}\n        inputValues=\"{inputValues}\"\n        scalingFactor=\"{magicScale}\"\n        on:finish=\"{(ev) => onProcessingFinish(ev, line, i)}\" />\n    {/each}\n  {/each}\n</div>\n\n<canvas\n  class=\"box-shadow\"\n  width=\"{triangleHeight * 6 + glueWidth}\"\n  height=\"{triangleBase * 2.5}\"\n  bind:this=\"{canvas}\"></canvas>\n\n<style>\n  canvas {\n    border: 1px solid #eeeeee;\n    border-radius: 4px;\n    padding: 32px;\n    background-color: #ffffff;\n  }\n</style>\n","<script lang=\"ts\">\n  import FileInputs from './components/FileInputs.svelte';\n  import Canvas from './components/Canvas.svelte';\n\n  let canvasSection: HTMLElement;\n  let canvasComponent: any & { canvas: HTMLCanvasElement };\n  let triangleHeight = 200;\n\n  let previewVisible = false;\n  const created = '__TIMESTAMP__'; // replaced by rollup\n  const version = '__VERSION__'; // replaced by rollup\n\n  let loadedImages: Array<{ src: string; alt: string }> = [];\n  let imageElements: HTMLImageElement[] = [];\n\n  let canvasReady = false;\n\n  async function onFilesChange({ detail: fileList }) {\n    imageElements = []; // make canvas not ready while images are loading\n    loadedImages.forEach((img) => URL.revokeObjectURL(img.src));\n    loadedImages = fileList.map((file) => ({\n      src: file == null ? null : URL.createObjectURL(file),\n      alt: file?.name,\n    }));\n    imageElements = await Promise.all(\n      loadedImages.map((img) => loadIntoImage(img.src))\n    );\n  }\n\n  function loadIntoImage(source: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      if (source == null) {\n        return Promise.resolve(null);\n      }\n      const image = new Image();\n      image.addEventListener('load', () => resolve(image), { once: true });\n      image.addEventListener('error', (err) => reject(err), { once: true });\n      image.src = source;\n    });\n  }\n\n  function onFinish() {\n    canvasReady = true;\n  }\n\n  function togglePreview() {\n    previewVisible = !previewVisible;\n    if (previewVisible) {\n      setTimeout(() => canvasSection.scrollIntoView());\n    }\n  }\n  function downloadAsImage() {\n    const link = document.createElement('a');\n    link.download = 'flextangle-template.png';\n    link.href = canvasComponent.canvas.toDataURL('image/png');\n    link.target = '_blank'\n    link.click();\n  }\n</script>\n\n<svelte:head>\n  <meta name=\"dc.created\" content=\"{created}\" />\n  <meta name=\"version\" content=\"{version}\" />\n</svelte:head>\n\n<div class=\"content\">\n  <header class=\"container\">\n    <h1>Flextangler <small>beta</small></h1>\n    <p>\n      <strong>Flextangler</strong>\n      is a web app that helps you create flextangles with your own images.\n      <strong>None of your files are sent to a server! All processing is done in\n        your browser.</strong>\n      In fact, you can use this website completely offline.\n    </p>\n    <p>\n      The app will then transform your images to fit the flextangle template.\n      Please note that the cutting is based on the largest possible hexagon in\n      the center of each image. To make sure you have the desired outcome, you\n      can upload squared images that are at least 250&times;250px in size.\n    </p>\n    <p>\n      Simply select four images with the boxes below. If you\n      select more than one file, they are put into the subsequent boxes.\n    </p>\n  </header>\n\n  <main class=\"container\">\n    <section>\n      <FileInputs images=\"{loadedImages}\" on:filesChange=\"{onFilesChange}\" />\n    </section>\n\n<section>\n      <p>\n        {#if canvasReady}\n          <strong>Your template is ready!</strong>\n          {:else}\n          Please select 4 images before continuing.\n          {/if}<br/>\n        Download the image or verify the outcome in the preview beforehand.\n      </p>\n    </section>\n    <section id=\"actions\">\n      <button class=\"btn box-shadow\" disabled=\"{!canvasReady}\" on:click={downloadAsImage}>Download template</button>\n      <button class=\"btn box-shadow\" disabled=\"{!canvasReady}\" on:click={togglePreview}>{previewVisible ? 'Hide' : 'Show'} preview</button>\n    </section>\n    <section hidden=\"{!previewVisible}\" bind:this={canvasSection}>\n      <Canvas\n        bind:this={canvasComponent}\n        drawables=\"{imageElements}\"\n        triangleHeight=\"{triangleHeight}\"\n        on:finish={onFinish}/>\n    </section>\n    <section>\n      <p>Print the template and follow the\n      <a href=\"https://i.imgur.com/9Fmn6Da.mp4\" rel=\"noopener\">cutting and folding instructions</a>.<br/>\n        Lastly make sure you share this website with your family and friends, if you like it.</p>\n    </section>\n  </main>\n  <footer class=\"container\">\n    Created by\n    <a href=\"https://github.com/JanMalch\" rel=\"noopener\">JanMalch 👨🏻‍💻</a>\n    and Lorenz 🧠 &bullet;\n    <a href=\"https://github.com/JanMalch/flextangler\" rel=\"noopener\">Source Code</a>\n    &bullet;\n    <a\n      href=\"https://github.com/JanMalch/flextangler/blob/master/CHANGELOG.md\"\n      rel=\"noopener\">v{version}</a>\n    &bullet; &copy; JanMalch,\n    {new Date().getFullYear()}\n  </footer>\n</div>\n\n<style>\n  .content {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto 1fr auto;\n    height: 100%;\n  }\n\n  h1 {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n  }\n\n  h1 > small {\n    font-size: 10px;\n    text-transform: uppercase;\n    opacity: 0.6;\n  }\n\n  header,\n  footer,\n  p {\n    text-align: center;\n  }\n\n  p {\n    width: 84ch;\n    margin-left: auto;\n    margin-right: auto;\n    font-size: 18px;\n    line-height: 1.65;\n  }\n\n  header > p:last-child {\n    margin-bottom: 0;\n  }\n\n  p > a {\n    font-weight: 500;\n  }\n\n  main > section {\n    margin: 64px 0;\n  }\n\n  details {\n      text-align: center; /* center canvas */\n  }\n\n  details > summary {\n      list-style-type: none;\n      outline: none;\n  }\n\n  details > summary strong {\n      cursor: pointer;\n  }\n\n  details > summary strong:hover {\n      text-decoration: underline;\n  }\n\n  details summary::-webkit-details-marker {\n      display:none;\n  }\n\n  #actions {\n      text-align: center;\n  }\n\n  .btn {\n      text-decoration: none;\n      text-transform: uppercase;\n      font-size: 18px;\n      border-radius: 4px;\n      padding: 16px 32px;\n      margin-right: 16px;\n      border: none;\n      outline: none;\n      font-weight: 500;\n      letter-spacing: 0.5px;\n      background-color: rgb(0,100,200);\n      color: #ffffff;\n      cursor: pointer;\n      transition: background-color 0.22s;\n  }\n\n  .btn:hover {\n      background-color: hsl(210, 100%, 30%);\n  }\n\n  .btn + .btn {\n      color: rgb(0,100,200);\n      background-color: #ffffff;\n  }\n\n  .btn + .btn:hover {\n      background-color: #f3f3f3;\n  }\n\n  .btn:disabled:hover,\n  .btn:disabled {\n      background-color: #cccccc;\n      color: #aaaaaa;\n      cursor: not-allowed;\n  }\n\n  footer {\n    padding: 32px 0;\n    opacity: 0.9;\n    font-size: 0.9em;\n  }\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","alt","key","important","String","fromCharCode","style","setProperty","images","dispatch","inputs","onInputChange","_","originalFiles","files","Math","min","list","DataTransfer","items","item","input","click","ev","x","y","freeze","ORIGIN","magicWidth","sqrt","magicScale","degreeToRadian","degree","PI","leftwardTriangle","rightwardTriangle","rotateAround","rectangle","offset","rotationInDegrees","moveTo","translate","width","height","rotate","movePointlike","pointlike","movement","drawImage","refPoint","image","destination","source","inClip","showLines","clippingShape","save","beginPath","points","start","next","lineTo","moveAlongPath","closePath","clip","setLineDash","lineWidth","strokeStyle","stroke","restore","toFixed","triangleHeight","triangleBase","LEFT_TOP","CENTER_TOP","RIGHT_TOP","LEFT_CENTER","CENTER_CENTER","RIGHT_CENTER","LEFT_BOTTOM","CENTER_BOTTOM","RIGHT_BOTTOM","inputValues","rotation","secondRotation","secondCanvasDimensions","w","h","scalingFactor","clippingTriangle","relativeRectangle","toTriangleCanvas","rotatedTriangleCanvas","fullRotatedTriangleCanvas","scaledRotatedTriangleCanvas","getContext","clearRect","point","naturalWidth","naturalHeight","loadIntoTriangleCanvas","loadIntoRotatedCanvas","loadIntoFullRotatedCanvas","loadIntoScaledCanvas","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","spread_props","drawables","canvas","lookup","prev","defaultWidth","defaultHeight","onProcessingFinish","partialCanvas","line","glueWidth","ceil","allTriangleSetups","some","HTMLImageElement","drawable","Date","getFullYear","version","created","P","rejected","step","result","done","generator","canvasComponent","loadedImages","imageElements","canvasReady","fileList","__awaiter","file","URL","createObjectURL","reject","Image","previewVisible","setTimeout","canvasSection","scrollIntoView","link","download","href","toDataURL","body"],"mappings":"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"}